<div class="container-fluid">
<p id="notice"><%= notice %></p>

<div class="col-xs-12 <%= @event.has_mappable_location? ? "col-md-5" : "" %>">
  <div class="panel panel-default">
    <div class="panel-heading">
      <h4 class="panel-title">
        <%= @event.title.titleize %>
        <span class="text-muted">(<%= formatted_time_distance_from_now(@event.start) %>)</span>
      </h4>
    </div>
    <div class="panel-body">
      <p>
        <strong>Location:</strong><br />
        <%= @event.location %>
      </p>

      <p>
        <strong>Date:</strong><br />
        <%= @event.start.localtime.to_s(:short) %> to <%= @event.end.localtime.to_s(:short) %>
      </p>

      <% if @event.poc.present? %>
        <p>
          <strong>ACLX Point of Contact</strong>
          <%= @event.poc %>
        </p>
      <% end %>

      <p>
        <strong>Created by:</strong><br />
        <%= @event.admin && @event.admin.display_name || "No Admin Set" %>
      </p>
      <p>
        <strong>Published</strong><br />
        <% if @event.published %>
          <span class="glyphicon glyphicon-ok text-success"></span>
        <% else %>
          <span class="glyphicon glyphicon-remove text-danger"></span>
        <% end %>
      </p>

      <% if @event.has_mappable_location? %>
      <div class="panel panel-info">
        <div class="panel-body">
          <button class="btn btn-default glyphicon glyphicon-road" onclick="getLocation();"></button>
          <button class="btn btn-default glyphicon glyphicon-refresh" onclick="resetMap();"></button>
        </div>
      </div>
      <% end %>
    </div>
    <div class="panel-footer">
      <%= link_to 'Edit', edit_event_path(@event), class: "btn btn-primary" %>
      <%= link_to 'Back', events_path, class: "btn btn-default" %>

      <% if current_admin.has_role?(:developer) %>
        <%= link_to "Delete", @event, method: :delete, data: {confirm: "Are you sure"}, class: "btn btn-danger pull-right" %>
      <% end %>
    </div>
  </div>
</div>

<% if @event.has_mappable_location? %>
<!-- Map View -->
<div class="col-md-7 col-xs-12">
  <div id="map" style="width: 100%; height: 85vh;">
  </div>
</div>
</div>

<script type="text/javascript">
  $(function() {
    var directionsDisplay = new google.maps.DirectionsRenderer();
    var directionsService = new google.maps.DirectionsService();

    // configure the defaults for the notifier
    $.notify.defaults({globalPosition: "top center"});

    window.calcRoute = function(position) {      
      var origin      = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
      var destination = new google.maps.LatLng({lat: <%= @event.latitude %>, lng: <%= @event.longitude %>});
      var request = {
          origin:      origin,
          destination: destination,
          travelMode:  google.maps.TravelMode.DRIVING,
          transitOptions: {
            arrivalTime: new Date("<%= @event.start %>")
          }
      };

      try {
        directionsService.route(request, function(response, status) {        
          if (status == google.maps.DirectionsStatus.OK) {
            handler.removeMarker(marker);
            directionsDisplay.setDirections(response);
          }

          $.notify(status, "info");
        });
      } catch(err) {
        $.notify(err.message, "error");
      }
    }

    window.getLocation = function() {
      if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(calcRoute, showError);
      } else {
          $.notify("Geolocation is not supported by this browser.", "error");
      }
    }

    function showError(error) {
      switch(error.code) {
        case error.PERMISSION_DENIED:
          $.notify("Geolocation permission denied.", "error");
          break;
        case error.POSITION_UNAVAILABLE:
          $.notify("Current position not available.", "warn");
          break;
        case error.TIMEOUT:
          $.notify("Timed out waiting for position.", "warn");
          break;
        case error.UNKNOWN_ERROR:
          $.notify(error, "error");
          break;
      }
    }

    window.resetMap = function() {
      handler = Gmaps.build('Google');
      handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
        marker = handler.addMarker({lat: <%= @event.latitude %>, lng: <%= @event.longitude %>, title: '<%= @event.title.titleize %>'});

        if(marker) {
          handler.map.centerOn(marker);
          handler.getMap().setZoom(13);
        } else {
          handler.map.centerOn({lat: 29.4241, lng: -98.4936});          
          handler.getMap().setZoom(10);
        }

        // connect the directions display to our map
        directionsDisplay = new google.maps.DirectionsRenderer();
        directionsDisplay.setMap(handler.getMap());
      });
    }

    // initialize the GMap
    var handler;
    var marker;
    resetMap();
  });
</script>
<% end %>